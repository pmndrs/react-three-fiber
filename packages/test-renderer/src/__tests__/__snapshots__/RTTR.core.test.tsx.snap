// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReactThreeTestRenderer Core can render a composite component & correctly build simple graph 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "name": "",
        "type": undefined,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "name": "",
            "type": "BoxGeometry",
          },
          Object {
            "children": Array [],
            "name": "",
            "type": "MeshBasicMaterial",
          },
        ],
        "name": "",
        "type": "Mesh",
      },
    ],
    "name": "",
    "type": "Group",
  },
]
`;

exports[`ReactThreeTestRenderer Core correctly builds a tree 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "props": Object {
          "args": Array [
            0,
            0,
            255,
          ],
          "attach": "background",
        },
        "type": "color",
      },
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "children": Array [],
                "props": Object {
                  "args": Array [],
                  "array": Float32Array [
                    -1,
                    -1,
                    1,
                    1,
                    -1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    -1,
                    1,
                    1,
                    -1,
                    -1,
                    1,
                  ],
                  "attach": "attributes-position",
                  "count": 6,
                  "itemSize": 3,
                },
                "type": "bufferAttribute",
              },
            ],
            "props": Object {
              "args": Array [],
              "attach": "geometry",
              "children": <bufferAttribute
                array={
                  Float32Array [
                    -1,
                    -1,
                    1,
                    1,
                    -1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    -1,
                    1,
                    1,
                    -1,
                    -1,
                    1,
                  ]
                }
                attach="attributes-position"
                count={6}
                itemSize={3}
              />,
            },
            "type": "bufferGeometry",
          },
          Object {
            "children": Array [],
            "props": Object {
              "args": Array [],
              "attach": "material",
              "color": "hotpink",
            },
            "type": "meshBasicMaterial",
          },
        ],
        "props": Object {
          "args": Array [],
          "children": Array [
            <bufferGeometry
              attach="geometry"
            >
              <bufferAttribute
                array={
                  Float32Array [
                    -1,
                    -1,
                    1,
                    1,
                    -1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    -1,
                    1,
                    1,
                    -1,
                    -1,
                    1,
                  ]
                }
                attach="attributes-position"
                count={6}
                itemSize={3}
              />
            </bufferGeometry>,
            <meshBasicMaterial
              attach="material"
              color="hotpink"
            />,
          ],
        },
        "type": "mesh",
      },
    ],
    "props": Object {
      "args": Array [],
      "children": Array [
        <Child
          col={
            Array [
              0,
              0,
              255,
            ]
          }
        />,
        <Mesh />,
        <Null />,
      ],
      "position": Array [
        1,
        2,
        3,
      ],
    },
    "type": "group",
  },
]
`;

exports[`ReactThreeTestRenderer Core exposes the instance 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "props": Object {
          "args": Array [
            2,
            2,
          ],
          "attach": "geometry",
        },
        "type": "boxGeometry",
      },
      Object {
        "children": Array [],
        "props": Object {
          "args": Array [],
          "attach": "material",
        },
        "type": "meshBasicMaterial",
      },
    ],
    "props": Object {
      "args": Array [],
      "children": Array [
        <boxGeometry
          args={
            Array [
              2,
              2,
            ]
          }
        />,
        <meshBasicMaterial />,
      ],
    },
    "type": "mesh",
  },
]
`;

exports[`ReactThreeTestRenderer Core exposes the instance 2`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "props": Object {
          "args": Array [
            2,
            2,
          ],
          "attach": "geometry",
        },
        "type": "boxGeometry",
      },
      Object {
        "children": Array [],
        "props": Object {
          "args": Array [],
          "attach": "material",
        },
        "type": "meshStandardMaterial",
      },
    ],
    "props": Object {
      "args": Array [],
      "children": Array [
        <boxGeometry
          args={
            Array [
              2,
              2,
            ]
          }
        />,
        <meshBasicMaterial />,
      ],
    },
    "type": "mesh",
  },
]
`;

exports[`ReactThreeTestRenderer Core toTree() handles complicated tree of fragments 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "props": Object {
          "args": Array [
            0,
            0,
            0,
          ],
          "attach": "background",
        },
        "type": "color",
      },
    ],
    "props": Object {
      "args": Array [],
      "children": <color
        args={
          Array [
            0,
            0,
            0,
          ]
        }
        attach="background"
      />,
    },
    "type": "group",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "props": Object {
          "args": Array [
            0,
            0,
            255,
          ],
          "attach": "background",
        },
        "type": "color",
      },
    ],
    "props": Object {
      "args": Array [],
      "children": <color
        args={
          Array [
            0,
            0,
            255,
          ]
        }
        attach="background"
      />,
    },
    "type": "group",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "props": Object {
          "args": Array [
            255,
            0,
            0,
          ],
          "attach": "background",
        },
        "type": "color",
      },
    ],
    "props": Object {
      "args": Array [],
      "children": <color
        args={
          Array [
            255,
            0,
            0,
          ]
        }
        attach="background"
      />,
    },
    "type": "group",
  },
]
`;

exports[`ReactThreeTestRenderer Core toTree() handles nested Fragments 1`] = `
Array [
  Object {
    "children": Array [],
    "props": Object {
      "args": Array [],
    },
    "type": "group",
  },
]
`;

exports[`ReactThreeTestRenderer Core updates children 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "props": Object {
              "args": Array [
                2,
                2,
              ],
              "attach": "geometry",
            },
            "type": "boxGeometry",
          },
          Object {
            "children": Array [],
            "props": Object {
              "args": Array [],
              "attach": "material",
            },
            "type": "meshBasicMaterial",
          },
        ],
        "props": Object {
          "args": Array [],
          "children": Array [
            <boxGeometry
              args={
                Array [
                  2,
                  2,
                ]
              }
            />,
            <meshBasicMaterial />,
          ],
          "position-z": 12,
        },
        "type": "mesh",
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "props": Object {
              "args": Array [
                4,
                4,
              ],
              "attach": "geometry",
            },
            "type": "boxGeometry",
          },
          Object {
            "children": Array [],
            "props": Object {
              "args": Array [],
              "attach": "material",
            },
            "type": "meshBasicMaterial",
          },
        ],
        "props": Object {
          "args": Array [],
          "children": Array [
            <boxGeometry
              args={
                Array [
                  4,
                  4,
                ]
              }
            />,
            <meshBasicMaterial />,
          ],
          "position-y": 12,
        },
        "type": "mesh",
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "props": Object {
              "args": Array [
                6,
                6,
              ],
              "attach": "geometry",
            },
            "type": "boxGeometry",
          },
          Object {
            "children": Array [],
            "props": Object {
              "args": Array [],
              "attach": "material",
            },
            "type": "meshBasicMaterial",
          },
        ],
        "props": Object {
          "args": Array [],
          "children": Array [
            <boxGeometry
              args={
                Array [
                  6,
                  6,
                ]
              }
            />,
            <meshBasicMaterial />,
          ],
          "position-x": 12,
        },
        "type": "mesh",
      },
    ],
    "props": Object {
      "args": Array [],
      "children": Array [
        <mesh
          position-z={12}
        >
          <boxGeometry
            args={
              Array [
                2,
                2,
              ]
            }
          />
          <meshBasicMaterial />
        </mesh>,
        <mesh
          position-y={12}
        >
          <boxGeometry
            args={
              Array [
                4,
                4,
              ]
            }
          />
          <meshBasicMaterial />
        </mesh>,
        <mesh
          position-x={12}
        >
          <boxGeometry
            args={
              Array [
                6,
                6,
              ]
            }
          />
          <meshBasicMaterial />
        </mesh>,
      ],
    },
    "type": "group",
  },
]
`;

exports[`ReactThreeTestRenderer Core updates children 2`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "props": Object {
              "args": Array [
                6,
                6,
              ],
              "attach": "geometry",
            },
            "type": "boxGeometry",
          },
          Object {
            "children": Array [],
            "props": Object {
              "args": Array [],
              "attach": "material",
            },
            "type": "meshBasicMaterial",
          },
        ],
        "props": Object {
          "args": Array [],
          "children": Array [
            <boxGeometry
              args={
                Array [
                  6,
                  6,
                ]
              }
            />,
            <meshBasicMaterial />,
          ],
          "rotation-x": 1,
        },
        "type": "mesh",
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "props": Object {
              "args": Array [
                4,
                4,
              ],
              "attach": "geometry",
            },
            "type": "boxGeometry",
          },
          Object {
            "children": Array [],
            "props": Object {
              "args": Array [],
              "attach": "material",
            },
            "type": "meshBasicMaterial",
          },
        ],
        "props": Object {
          "args": Array [],
          "children": Array [
            <boxGeometry
              args={
                Array [
                  4,
                  4,
                ]
              }
            />,
            <meshBasicMaterial />,
          ],
          "position-y": 12,
        },
        "type": "mesh",
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "props": Object {
              "args": Array [],
              "attach": "material",
            },
            "type": "meshBasicMaterial",
          },
          Object {
            "children": Array [],
            "props": Object {
              "args": Array [
                2,
                2,
              ],
              "attach": "geometry",
            },
            "type": "boxGeometry",
          },
        ],
        "props": Object {
          "args": Array [],
          "children": Array [
            <boxGeometry
              args={
                Array [
                  6,
                  6,
                ]
              }
            />,
            <meshBasicMaterial />,
          ],
          "position-x": 12,
        },
        "type": "mesh",
      },
    ],
    "props": Object {
      "args": Array [],
      "children": Array [
        <mesh
          position-z={12}
        >
          <boxGeometry
            args={
              Array [
                2,
                2,
              ]
            }
          />
          <meshBasicMaterial />
        </mesh>,
        <mesh
          position-y={12}
        >
          <boxGeometry
            args={
              Array [
                4,
                4,
              ]
            }
          />
          <meshBasicMaterial />
        </mesh>,
        <mesh
          position-x={12}
        >
          <boxGeometry
            args={
              Array [
                6,
                6,
              ]
            }
          />
          <meshBasicMaterial />
        </mesh>,
      ],
    },
    "type": "group",
  },
]
`;
